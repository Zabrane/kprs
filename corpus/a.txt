===
i
===
42
---
(k (n (int1)))

===
+
===
+
---
(k (v))

===
i+i
===
2+3
---
(k (dap (n (int1)) (v) (n (int1))))

===
i-i
===
4-2
---
(k (dam (n (int1)) (v) (n (int1))))

===
i - i
===
4 - 2
---
(k (dap (n (int1)) (v) (n (int1))))

===
+i
===
+4
---
(k (map (v) (n (int1))))

===
-N
===
-2
---
(k (n (int1)))

===
- N
===
- 4
---
(k (map (v) (n (int1))))

===
++i
===
++123
---
(k (map (v) (map (v) (n (int1)))))

===
i+
===
0+
---
(k k: (pdap a: (n (int1)) v: (v)))

===
v v+
===
x y+
---
(k k: (pmap f: (n (var)) z: (pdap a: (n (var)) v: (v))))

===
i++
===
0++
---
(k k: (pdap a: (n (int1)) v: (v) z: (pmap v: (v))))

===
vvv
===
+*!
---
(k k: (pmap f: (v) z: (pmap f: (v) z: (pmap v: (v)))))

===
vvvn
===
+*!0
---
(k k: (map f: (v) a: (map f: (v) a: (map f: (v) a: (n (int1))))))

===
vvva
===
+*![0]
---
(k k: (map f: (v) a: (map f: (v) a: (ap f: (v) a: (seq (n (int1)))))))

===
nvv
===
(+)*!
---
(k k: (pdap a: (parn (v)) v: (v) z: (pmap v: (v))))

===
nvvn
===
(+)*!0
---
(k k: (dap a: (parn (v)) v: (v) b: (map f: (v) a: (n (int1)))))

===
nvva
===
(+)*![0]
---
(k k: (dap a: (parn (v)) v: (v) b: (ap f: (v) a: (seq (n (int1))))))

===
n(v×8)
===
42########
---
(k k: (pdap a: (n (int1)) v: (v)
    z: (pmap f: (v) z: (pmap f: (v) z: (pmap f: (v) z: (pmap f: (v)
     z: (pmap f: (v) z: (pmap f: (v) z: (pmap v: (v))))))))))

===
(v×8)
===
####++++
---
(k k: (pmap f: (v)
    z: (pmap f: (v) z: (pmap f: (v) z: (pmap f: (v) z: (pmap f: (v)
     z: (pmap f: (v) z: (pmap f: (v) z: (pmap v: (v))))))))))

===
i++i
===
0++0
---
(k (dap (n (int1)) (v) (map (v) (n (int1)))))

===
i+-N
===
2+-1
---
(k (dap (n (int1)) (v) (n (int1))))

===
v[i]+v[I]
===
x[0]!x[1 2]
---
(k (dap (ap (n (var)) (seq (n (int1))))
        (v)
        (ap (n (var)) (seq (n (intv))))))

===
*[i]
===
*[0]
---
(k (ap (v) (seq (n (int1)))))

===
#*[i]
===
#*[0]
---
(k (map (v) (ap (v) (seq (n (int1))))))

===
i+![i]
===
1+!2
---
(k (dap (n (int1)) (v) (map (v) (n (int1)))))

===
*[i;i]
===
*[0;1]
---
(k (ap (v) (seq (n (int1)) (n (int1)))))

===
*[i;+]
===
*[0;+]
---
(k (ap (v) (seq (n (int1)) (v))))

===
*[i;i;i]
===
*[0;1;2]
---
(k (ap (v) (seq (n (int1)) (n (int1)) (n (int1)))))

===
v[dap;map]
===
foo[2+3;!10]
---
(k (ap (n (var))
       (seq (dap (n (int1)) (v) (n (int1)))
            (map (v) (n (int1))))))

===
+[;]
===
+[;]
---
(k (ap (v) (seq)))

===
v[;i][i;][i]
===
foo[;1][0;][2]
---
(k (ap (ap (ap (n (var))
               (seq (n (int1))))
           (seq (n (int1))))
   (seq (n (int1)))))

===
+/
===
+/
---
(k (avd (v) (a)))

===
+/*\
===
+/*\
---
(k (pmap (avd (v) (a)) (pmap (avd (v) (a)))))

===
+/(i;i)
===
+/(2;3)
---
(k (map (avd (v) (a))
   (list (seq (n (int1)) (n (int1)))))) 

===
+//v
===
+//foo
---
(k (map (avd (avd (v) (a)) (a))
        (n (var))))

===
+/I
===
+/4 2
---
(k (map (avd (v) (a))
        (n (intv))))

===
i+/I
===
0+/2 4
---
(k (dap (n (int1))
        (avd (v) (a))
        (n (intv))))

===
i/i
===
2/2
---
(k (map (avd (n (int1)) (a)) (n (int1)))) 

===
i/
===
42/
---
(k (avd (n (int1)) (a)))

===
()
===
()
---
(k (list))

===
(i)
===
(1)
---
(k (parn (n (int1))))

===
(i;i)
===
(1;2)
---
(k (list (seq (n (int1)) (n (int1)))))

===
v
===
foo
---
(k (n (var)))

===
(((v)))
===
(((foo)))
---
(k (parn (parn (parn (n (var))))))

===
i+i+i
===
1+2+3
---
(k (dap (n (int1))
        (v)
        (dap (n (int1)) (v) (n (int1)))))

===
i+(i+i)
===
1+(2+3)
---
(k (dap (n (int1))
        (v)
        (parn (dap (n (int1)) (v) (n (int1))))))

===
(i+i)+i
===
(1+2)+3
---
(k (dap (parn (dap (n (int1)) (v) (n (int1))))
   (v)
   (n (int1))))

===
f.*.f
===
1.*.2
---
(k (dap (n (flt1)) (v) (n (flt1))))

===
I
===
1 2 3
---
(k (n (intv)))

===
I₋₊₊
===
-1 2 3
---
(k (n (intv)))

===
I₊₋₊
===
1 -2 3
---
(k (n (intv)))

===
I₋₋₋
===
-1 -2 -3
---
(k (n (intv)))

===
I₇
===
0 1 2 3 4 5 6
---
(k (n (intv)))

===
I₈
===
0 1 2 3 4 5 6 7
---
(k (n (intv)))

===
f
===
3.141592653589793238462643383279502884197169
---
(k (n (flt1)))

===
F.
===
1 2 3.
---
(k (n (fltv)))

===
.F
===
.1 2 3
---
(k (n (fltv)))

===
Fe
===
1 2e2 3
---
(k (n (fltv)))

===
,I₄
===
,0 1 2 3
---
(k (map (v) (n (intv))))

===
,,I₄
===
,,0 1 2 3
---
(k (map (v) (map (v) (n (intv)))))

===
,,,I₄
===
,,,0 1 2 3
---
(k (map (v) (map (v) (map (v) (n (intv))))))

===
I₁
===
,-0
---
(k (map (v) (n (int1))))

===
(I;I)
===
(1 0;0 1)
---
(k (list (seq (n (intv))
              (n (intv)))))

===
(I₁;I)
===
(,0;0 1)
---
(k (list (seq (map (v) (n (int1)))
              (n (intv)))))

===
vI
===
foo 0 1
---
(k (map (n (var))
        (n (intv))))

===
Iv
===
0 1 x
---
(k (map (n (intv))
        (n (var))))

===
id
===
{[x]x}
---
(k (lam (args (var)) (seq (n (var)))))

===
const
===
{[x;y]y}
---
(k (lam (args (var) (var)) (seq (n (var)))))

===
fnil0
===
{[]}
---
(k (lam))

===
fseq
===
{[a]a;a}
---
(k (lam (args (var)) (seq (n (var)) (n (var)))))

===
i+I
===
1+0 1 2
---
(k (dap (n (int1))
        (v)
        (n (intv))))

===
I+i
===
0 1 2+1
---
(k (dap (n (intv))
        (v)
        (n (int1))))

===
I+v
===
0 1 2+x
---
(k (dap (n (intv))
        (v)
        (n (var))))

===
I+I
===
0 1 2+3 4
---
(k (dap (n (intv))
        (v)
        (n (intv))))

===
v:i
===
answer:42
---
(k (ass (n (var)) (n (int1))))

===
e
===
:x*x
---
(k (exp (dap (n (var)) (v) (n (var)))))

===
v:e
===
add::x+y
---
(k (ass (n (var))
     (exp (dap (n (var)) (v) (n (var))))))

===
v:v:v
===
x:y:z
---
(k (ass (n (var)) (ass (n (var)) (n (var)))))

===
v+:+i
===
c+:+1
---
(k (ass (n (var)) (v) (map (v) (n (int1)))))

===
v:
===
foo:
---
(k (ass (n (var))))

===
v:+[..]
===
x:+[2;2]
---
(k k: (ass v: (n (var))
           a: (ap f: (v) a: (seq (n (int1)) (n (int1))))))

===
v:+
===
plus:+
---
(k k: (pass v: (n (var)) a: (pmap v: (v))))

===
v:nv
===
suc:1+
---
(k k: (pass v: (n (var))
            a: (pdap a: (n (int1)) v: (v))))

===
+[a:1;b:2]
===
+[a:1;b:2]
---
(k (ap (v) (seq (ass (n (var)) (n (int1)))
                (ass (n (var)) (n (int1)))))) 

===
f g h
===
f g h
---
(k (map (n (var))
        (map (n (var)) (n (var)))))

===
f g*h k
===
f g*h k
---
(k (map (n (var))
        (dap (n (var)) (v)
             (map (n (var)) (n (var))))))

===
e/I
===
(:x+y)/2 2
---
(k k: (map f: (avd f: (parn (exp (dap a: (n (var)) v: (v) b: (n (var)))))
                   a: (a))
           a: (n (intv))))

===
lelf/pe/p24
===
p24:(:<<y,x)/|sv[1+!n:10]i:1000000-1
---
(k (ass (n (var))
    (map (avd (parn (exp (map (v)
                              (map (v)
                                   (dap (n (var)) (v) (n (var)))))))
              (a))
         (map (v)
           (map (ap (n (var))
                    (seq (dap (n (int1))
                              (v)
                              (map (v) (ass (n (var)) (n (int1)))))))
                (ass (n (var))
                     (dam (n (int1)) (v) (n (int1)))))))))
